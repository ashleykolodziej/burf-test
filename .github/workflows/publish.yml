name: Publish Packages
on:
  release:
    types: [created]
jobs:  
  getPackages:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/graphql-action@v2.x
        id: get_latest_package
        with:
          query: |
            query packages($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                packages(last: 3, names: ["burf-base", "burf-theme", "burf-tools"]) {
                  nodes {
                    name
                    latestVersion {
                      version
                    }
                  }
                }
              }
            }
          owner: 'ashleykolodziej'
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          echo '${{ steps.get_latest_package.outputs.data }}'
          echo 'Current package version for ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[0].name }}: ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[0].latestVersion.version }}'
          echo 'Current package version for ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[1].name }}: ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[1].latestVersion.version }}'
          echo 'Current package version for ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[2].name }}: ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[2].latestVersion.version }}'
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@ashleykolodziej'   
      - name: Read node from package.json
        uses: culshaw/read-package-node-version-actions@v1
        with: 
          path: "./burf-base/"
        id: current-version-burf-base
      - name: Get current version
        run: 'echo "${{ steps.current-version-burf-base.outputs.data }}"'
      - name: Check version
        if: steps.check.outputs.changed == ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[0].latestVersion.version }}
        run: 'echo "New version of burf-base detected: ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[0].latestVersion.version }}"'
      - name: Install Dependencies
        if: steps.check.outputs.changed == 'true'
        run: npm install --production
      - name: Publish
        if: steps.check.outputs.changed == 'true'
        run: npm publish burf-base
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: My backup step
        if: ${{ failure() }}
        run: 'echo "No new version of burf-base detected. Continuing on..."'
