name: Publish Packages
on:
  release:
    types: [created]
jobs:  
  getPackages:
    runs-on: ubuntu-latest
    outputs:
      burf-base-version: ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[0].latestVersion.version }}
      burf-theme-version: ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[1].latestVersion.version }}
      burf-tools-version: ${{ fromJSON(steps.get_latest_package.outputs.data).repository.packages.nodes[2].latestVersion.version }}
    steps:
      - uses: octokit/graphql-action@v2.x
        id: get_latest_package
        with:
          query: |
            query packages($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                packages(last: 3, names: ["burf-base", "burf-theme", "burf-tools"]) {
                  nodes {
                    name
                    latestVersion {
                      version
                    }
                  }
                }
              }
            }
          owner: 'ashleykolodziej'
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
  getReleases:
    runs-on: ubuntu-latest
    outputs:
      burf-base-version: ${{ fromJSON(steps.burf-base-release.outputs.content).version }}
    steps:
      - name: Read burf-base package.json
        id: burf-base-release
        uses: juliangruber/read-file-action@v1
        with:
          path: burf-base/package.json    
      - name: Echo package.json
        run: 'echo "Latest version: ${{ fromJSON(steps.burf-base-release.outputs.content).version }}"'
  publish:
    needs: [ getPackages, getReleases ]
    runs-on: ubuntu-latest
    steps:
      - name: Print Version
        run: |
          echo 'Current package version for burf-base: ${{ needs.getPackages.outputs.burf-base-version }}'
          echo 'Current package version for burf-theme: ${{ needs.getPackages.outputs.burf-theme-version }}'
          echo 'Current package version for burf-tools: ${{ needs.getPackages.outputs.burf-tools-version }}'
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@ashleykolodziej'   
      - name: Publish burf-base
        if: ${{ needs.getReleases.outputs.burf-base-version != needs.getPackages.outputs.burf-base-version }}
        run: |
          echo "New version of burf-base detected: ${{ needs.getReleases.outputs.burf-base-version }}. Old version: ${{ needs.getPackages.outputs.burf-base-version }}. Publishing now..."
          npm install --production
          npm publish burf-base
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Skip publishing burf-base
        if: ${{ needs.getReleases.outputs.burf-base-version == needs.getPackages.outputs.burf-base-version }}
        run: 'echo "::warning file=package.json,line=3::No new version of burf-base detected. Continuing on..."'
