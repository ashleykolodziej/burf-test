name: Publish Packages
on:
  release:
    types: [created]
jobs:  
  logLatestRelease:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/graphql-action@v2.x
        id: get_latest_release
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo 'latest release: ${{ steps.get_latest_release.outputs.data }}'"
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@ashleykolodziej'
      - name: Check version
        uses: octokit/graphql-action@v2.x
        id: check
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.repository.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: "echo 'latest release: ${{ steps.check.outputs.data }}'"
      - name: Check version
        if: steps.check.outputs.changed == 'true'
        run: 'echo "New version of burf-base detected: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
      - name: Install Dependencies
        if: steps.check.outputs.changed == 'true'
        run: npm install --production
      - name: Publish
        if: steps.check.outputs.changed == 'true'
        run: npm publish burf-base
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: My backup step
        if: ${{ failure() }}
        run: 'echo "No new version of burf-base detected. Continuing on..."'
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@ashleykolodziej'
      - run: npm install --production
      - run: npm publish burf-tools
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
